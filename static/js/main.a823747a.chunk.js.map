{"version":3,"sources":["components/GridContainer/GridContainer.js","components/CaptionText/CaptionText.js","components/ImageCard/ImageCard.js","components/Cell/Cell.js","utils/cacheUtils.js","utils/imageUtils.js","pages/Home/HomeCell.js","constants/categories.js","components/Dialog/AlertDialog.js","components/NavBar/NavBar.js","components/FlexBox/FlexBox.js","pages/Home/Home.js","utils/themeUtils.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["GridContainer","children","Box","alignItems","justifyItems","sx","display","gap","margin","gridTemplateColumns","CaptionText","title","Typography","color","fontSize","lineHeight","textAlign","variant","gutterBottom","ImageCard","styled","Card","position","ImageCardContent","CardContent","backgroundColor","padding","width","alignSelf","paddingBottom","ImageCardMedia","CardMedia","height","Cell","baseUrl","id","image","onChange","minHeight","opacity","filter","justifyContent","htmlFor","style","flex","Input","accept","type","CACHE_NAME","getCachedData","cacheName","url","a","caches","open","cacheStorage","match","cachedResponse","ok","retrieveImage","cachedData","Error","blob","blobData","saveImage","file","imageBlob","Blob","response","Response","then","cache","put","resize","canvas","maxSize","getContext","drawImage","dataURI","bytes","split","indexOf","atob","unescape","mime","max","length","ia","Uint8Array","i","charCodeAt","dataURItoBlob","toDataURL","resizeImage","settings","reader","FileReader","Image","document","createElement","Promise","no","onload","readerEvent","src","target","result","readAsDataURL","HomeCell","item","name","useState","currentImage","setCurrentImage","useEffect","loadImageFromCache","cachedImage","console","warn","onChangeHandler","event","preventDefault","uploadedImage","files","compressedImage","cellImage","URL","createObjectURL","formattedCategories","map","index","AlertDialog","onClose","onSuccess","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","NavBar","onReset","setOpen","handleClose","AppBar","Toolbar","component","flexGrow","IconButton","RestartAlt","FlexBox","flexDirection","Home","delete","window","location","reload","categories","align","fontWeight","theme","createTheme","palette","primary","purple","App","ThemeProvider","className","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","process","href","origin","addEventListener","fetch","headers","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a823747a.chunk.js","sourcesContent":["import { Box } from \"@mui/system\";\n\nexport const GridContainer = ({ children }) => {\n  const columnSize = 5;\n\n  return (\n    <Box\n      alignItems=\"stretch\"\n      justifyItems=\"stretch\"\n      sx={{\n        display: \"grid\",\n        gap: 0.25,\n        margin: \"0.5rem 0.25rem\",\n        gridTemplateColumns: `repeat(${columnSize}, 1fr)`,\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n","import { Typography } from \"@mui/material\";\n\nexport const CaptionText = ({ title }) => {\n  const textStyle = {\n    color: \"#fff\",\n    fontSize: \"0.6rem\",\n    lineHeight: \"0.7rem\",\n    textAlign: \"center\",\n  };\n\n  return (\n    <Typography sx={textStyle} variant=\"caption\" display=\"block\" gutterBottom>\n      {title}\n    </Typography>\n  );\n};\n","import { Card, CardContent, CardMedia } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\n\nexport const ImageCard = styled(Card)(() => ({\n  position: \"relative\",\n  display: \"flex\",\n}));\n\nexport const ImageCardContent = styled(CardContent)(() => ({\n  position: \"relative\",\n  backgroundColor: \"rgba(0,0,0, 0.6)\",\n  padding: \"0.2rem\",\n  width: \"100%\",\n  alignSelf: \"flex-end\",\n  \"&:last-child\": {\n    paddingBottom: 0,\n  },\n}));\n\nexport const ImageCardMedia = styled(CardMedia)(() => ({\n  position: \"absolute\",\n  width: \"100%\",\n  height: \"100%\",\n}));\n","import { Input } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { CaptionText } from \"../CaptionText\";\nimport { ImageCard, ImageCardContent, ImageCardMedia } from \"../ImageCard\";\n\nexport const Cell = ({ baseUrl, title, id, image, onChange }) => {\n  const absolutePosition = {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"stretch\",\n    justifyContent: \"stretch\",\n    padding: 0.1,\n  };\n\n  const backdrop = {\n    backgroundColor: \"#000\",\n    opacity: 0.1,\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    filter: \"blur(1px)\",\n  };\n\n  return (\n    <ImageCard sx={{ minHeight: 100, position: \"relative\" }}>\n      <ImageCardMedia image={image}></ImageCardMedia>\n      <Box sx={backdrop}> </Box>\n      <ImageCardContent>\n        <CaptionText title={title} />\n      </ImageCardContent>\n      <Box sx={absolutePosition}>\n        <label htmlFor={`icon-button-${id}`} style={{ flex: 1 }}>\n          <Input\n            style={{\n              display: \"none\",\n            }}\n            accept=\"image/*\"\n            id={`icon-button-${id}`}\n            type=\"file\"\n            onChange={onChange}\n          />\n          {/* <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          ></IconButton> */}\n        </label>\n      </Box>\n    </ImageCard>\n  );\n};\n","const CACHE_NAME = \"mysite-dynamic\";\n\nconst getCachedData = async (cacheName, url) => {\n  const cacheStorage = await caches.open(cacheName);\n  const cachedResponse = await cacheStorage.match(url);\n\n  if (!cachedResponse || !cachedResponse.ok) {\n    return null;\n  }\n\n  return await cachedResponse;\n};\n\nexport const retrieveImage = async (url) => {\n  const cachedData = await getCachedData(CACHE_NAME, url);\n  if (!cachedData) {\n    throw new Error(\"Cached data not found \");\n  }\n\n  const blobData = await cachedData.blob();\n  if (!blobData) {\n    throw new Error(\"Cached data type is invalid\");\n  }\n\n  return blobData;\n};\n\nexport const saveImage = async (url, file) => {\n  const imageBlob = new Blob([file], { type: \"image/jpeg\" });\n  const response = new Response(imageBlob);\n\n  caches.open(CACHE_NAME).then((cache) => {\n    cache.put(url, response);\n  });\n};\n\nexport const resetCache = () => {\n  return caches.delete(CACHE_NAME);\n};\n","const defaultMaxSize = 500;\n\nconst dataURItoBlob = (dataURI) => {\n  const bytes =\n    dataURI.split(\",\")[0].indexOf(\"base64\") >= 0\n      ? atob(dataURI.split(\",\")[1])\n      : unescape(dataURI.split(\",\")[1]);\n  const mime = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const max = bytes.length;\n  const ia = new Uint8Array(max);\n  for (var i = 0; i < max; i++) ia[i] = bytes.charCodeAt(i);\n  return new Blob([ia], { type: mime });\n};\n\nconst resize = (image, canvas, maxSize) => {\n  let width = image.width;\n  let height = image.height;\n\n  if (width > height) {\n    if (width > maxSize) {\n      height *= maxSize / width;\n      width = maxSize;\n    }\n  } else {\n    if (height > maxSize) {\n      width *= maxSize / height;\n      height = maxSize;\n    }\n  }\n\n  canvas.width = width;\n  canvas.height = height;\n  canvas.getContext(\"2d\").drawImage(image, 0, 0, width, height);\n  let dataUrl = canvas.toDataURL(\"image/jpeg\");\n  return dataURItoBlob(dataUrl);\n};\n\nexport const resizeImage = (settings) => {\n  const file = settings.file;\n  const maxSize = settings.maxSize || defaultMaxSize;\n\n  const reader = new FileReader();\n  const image = new Image();\n\n  const canvas = document.createElement(\"canvas\");\n\n  return new Promise((ok, no) => {\n    if (!file.type.match(/image.*/)) {\n      no(new Error(\"Not an image\"));\n      return;\n    }\n\n    reader.onload = (readerEvent) => {\n      image.onload = () => ok(resize(image, canvas, maxSize));\n      image.src = readerEvent.target.result;\n    };\n\n    reader.readAsDataURL(file);\n  });\n};\n","import { useEffect, useState } from \"react\";\nimport { Cell } from \"../../components/Cell/Cell\";\nimport { retrieveImage, saveImage } from \"../../utils/cacheUtils\";\nimport { resizeImage } from \"../../utils/imageUtils\";\n\nexport const HomeCell = ({ item: { id, name } }) => {\n  const baseUrl = \"https://mu-placeholder.com\";\n  const url = `${baseUrl}/${id}`;\n  const placeholderImage = \"/img_placeholder.jpg\";\n\n  const [currentImage, setCurrentImage] = useState(null);\n\n  useEffect(() => {\n    loadImageFromCache(url);\n  }, [url]);\n\n  const loadImageFromCache = async (url) => {\n    try {\n      const cachedImage = await retrieveImage(url);\n\n      setCurrentImage(cachedImage);\n    } catch (err) {\n      console.warn(err);\n    }\n  };\n\n  const onChangeHandler = async (event) => {\n    event.preventDefault();\n\n    const uploadedImage = event.target.files[0];\n\n    const compressedImage = await resizeImage({\n      file: uploadedImage,\n      maxSize: 700,\n    });\n\n    saveImage(url, compressedImage);\n    setCurrentImage(compressedImage);\n  };\n\n  const cellImage = currentImage\n    ? URL.createObjectURL(currentImage)\n    : placeholderImage;\n\n  return (\n    <Cell id={id} title={name} image={cellImage} onChange={onChangeHandler} />\n  );\n};\n","const categories = [\n  { name: \"From Insurance\" },\n  { name: \"From MITDC\" },\n  { name: \"From Ron's BU\" },\n  { name: \"From ES\" },\n  { name: \"From MU\" },\n  { name: \"From Bank\" },\n  { name: \"From GB\" },\n  { name: \"Someone from outside Metro Manila\" },\n  { name: \"Someone you haven’t talked to before\" },\n  { name: \"Someone not in IT\" },\n  { name: \"A Fresh Grad\" },\n  { name: \"A 2022 Hire (Welcome to CDT!)\" },\n  { name: \"Basketball Player\" },\n  { name: \"KDrama Addict\" },\n  { name: \"A Hardcore Gamer\" },\n  { name: \"Plays an Instrument\" },\n  { name: \"A Manager/Leader\" },\n  { name: \"A Tall Person\" },\n  { name: \"Solid DOTA Player\" },\n  { name: \"Owns 2 or more pets\" },\n  { name: \"Anime Fan\" },\n  { name: \"Mahilig Humugot\" },\n  { name: \"Single\" },\n  { name: \"Has Kids\" },\n  { name: \"Best Dressed\" },\n];\n\nconst formattedCategories = categories.map((item, index) => ({\n  ...item,\n  id: index,\n}));\n\nexport default formattedCategories;\n","import {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n} from \"@mui/material\";\nexport const AlertDialog = ({ open, onClose, onSuccess }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Reset your BINGO card?</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          This action will clear all your entries. Sayang naman, gurl! :(\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>CANCEL</Button>\n        <Button onClick={onSuccess} autoFocus>\n          YUP!\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState } from \"react\";\nimport { AppBar, IconButton, Toolbar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { RestartAlt } from \"@mui/icons-material\";\nimport { AlertDialog } from \"../Dialog\";\n\nexport const NavBar = ({ onReset }) => {\n  const title = \"Bi-BINGO ka na, Friend!\";\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleReset = () => {\n    handleClose();\n    onReset();\n  };\n\n  return (\n    <Box>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {title}\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n            onClick={handleClickOpen}\n          >\n            <RestartAlt />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <AlertDialog open={open} onClose={handleClose} onSuccess={handleReset} />\n    </Box>\n  );\n};\n","import { Box, styled } from \"@mui/system\";\n\nexport const FlexBox = styled(Box)(() => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyItems: \"center\",\n}));\n","import { GridContainer } from \"../../components/GridContainer\";\nimport { HomeCell } from \"./HomeCell\";\n\nimport categories from \"../../constants/categories\";\nimport { Typography } from \"@mui/material\";\nimport { NavBar } from \"../../components/NavBar\";\nimport { resetCache } from \"../../utils/cacheUtils\";\nimport { FlexBox } from \"../../components/FlexBox\";\n\nexport const Home = () => {\n  const handleReset = () => {\n    resetCache().then(() => {\n      window.location.reload(false);\n    });\n  };\n\n  const renderHeader = () => {\n    return (\n      <>\n        {\"BINGO\".split(\"\").map((item, index) => (\n          <Typography key={index} align=\"center\" sx={{ fontWeight: \"bold\" }}>\n            {item}\n          </Typography>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <>\n      <NavBar onReset={handleReset} />\n\n      <FlexBox sx={{ flexGrow: 1 }}>\n        <FlexBox sx={{ flexGrow: 1, justifyContent: \"center\" }}>\n          <GridContainer categories={categories} sx={{ flexGrow: 1 }}>\n            {renderHeader()}\n            {categories.map((item) => (\n              <HomeCell key={item.id} item={item} />\n            ))}\n          </GridContainer>\n        </FlexBox>\n        {/* <Box sx={{ height: \"100px\" }} /> */}\n      </FlexBox>\n    </>\n  );\n};\n","import { purple } from \"@mui/material/colors\";\nimport { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: purple,\n  },\n});\n\nexport { theme };\n","import \"./App.css\";\nimport { Home } from \"./pages/Home\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { FlexBox } from \"./components/FlexBox\";\nimport { theme } from \"./utils/themeUtils\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <FlexBox className=\"full-height\">\n        <Home />\n      </FlexBox>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}